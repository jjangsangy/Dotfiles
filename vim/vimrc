" ==========================================================
" Sang Han's Vimrc
" ==========================================================
set nocompatible
syntax enable

" Vundle
filetype on
filetype off
set rtp+=~/.vim/bundle/vundle/
call vundle#rc()

" ==========================================================
" install Vundle bundles
" ==========================================================
if filereadable(expand("~/.vimrc.bundles"))
  source ~/.vimrc.bundles
  source ~/.vimrc.bundles.local
endif

filetype plugin indent on

" ==========================================================
" Basic Configuration
" ==========================================================
set nowrap
set splitright
set autoindent
set autoread
set backspace=2
set backupcopy=yes
set clipboard=unnamed
set directory-=.
set encoding=utf-8
set expandtab
set ignorecase
set incsearch
set laststatus=2
set list
set listchars=tab:▸\ ,trail:▫
set number
set ruler
set scrolloff=3
set shiftwidth=4
set showcmd
set smartcase
set softtabstop=4
set tabstop=4
set wildignore=log/**,node_modules/**,target/**,tmp/**,*.rbc
set wildmenu
set wildmode=longest,list,full

" Enable basic mouse behavior such as resizing buffers.
set mouse=a
if exists('$TMUX')  " Support resizing in tmux
  set ttymouse=xterm2
endif

" ==========================================================
" Keyboard Shortcuts
" ==========================================================
noremap <C-e> <esc>$
noremap <C-a> <esc>0
nnoremap K gg
nnoremap J G

" - Mapleader set to comma
let mapleader = ','

" ==========================================================
" - Windows Management
" ==========================================================
" <Ctrl>+hjkl for moving between splits
set splitbelow
set splitright
noremap <C-h> <C-w>h
noremap <C-j> <C-w>j
noremap <C-k> <C-w>k
noremap <C-l> <C-w>l

" ==========================================================
" - Plugins
" ==========================================================
" Access with mapleader which is set to comma.
" Align:                l
" Ack:                  a
" CtrlP:                t
" CtrlP Clear Cache:    T
" CtrlP Buffer:         b
" NERDTree:             d
" NERDTree Find:        f
" Tagbar Toggle:        ]
" Strip Whitespace:     space
" Git Gutter:           g
" Plug:                 c
" Vimrc Source:         sv
noremap <leader>l :Align
nnoremap <leader>a :Ack<space>
nnoremap <leader>b :CtrlPBuffer<CR>
nnoremap <leader>d :NERDTreeToggle<CR>
nnoremap <leader>f :NERDTreeFind<CR>
nnoremap <leader>t :CtrlP<CR>
nnoremap <leader>T :CtrlPClearCache<CR>:CtrlP<CR>
nnoremap <leader>] :TagbarToggle<CR>
nnoremap <leader><space> :call whitespace#strip_trailing()<CR>
nnoremap <leader>g :GitGutterToggle<CR>
nnoremap <leader>c <Plug>Kwbd
nnoremap <leader>ev :vsplit $MYVIMRC<cr>
noremap <silent> <leader>sv :source ~/.vimrc<CR>:filetype detect<CR>:exe ":echo 'vimrc reloaded'"<CR>

" ==========================================================
" Settings
" ==========================================================
let g:ctrlp_match_window = 'order:ttb,max:20'
let g:NERDSpaceDelims=1
let g:gitgutter_enabled = 0

" ==========================================================
" Silver Searcher
" ==========================================================
if executable('ag')
  let g:ackprg = 'ag --nogroup --column'

  set grepprg=ag\ --nogroup\ --nocolor

" Use ag in CtrlP for listing files
  let g:ctrlp_user_command = 'ag %s -l --nocolor -g ""'
endif

" ==========================================================
" Filetype Specific
" ==========================================================
autocmd BufRead,BufNewFile *.fdoc set filetype=yaml
autocmd BufRead,BufNewFile *.md set filetype=markdown

" Vimrc
autocmd BufNewFile,BufRead .vimrc setlocal nowrap

" Shell
autocmd BufRead,BufNewFile *path set filetype=sh
autocmd BufRead,BufNewFile *aliases set filetype=sh
autocmd BufRead,BufNewFile *profile set filetype=sh
augroup shell
    autocmd!
    autocmd FileType sh nnoremap <leader>$$ bi$<esc>l
augroup END

" ==========================================================
" Rails
" ==========================================================
autocmd User Rails silent! Rnavcommand decorator      app/decorators            -glob=**/* -suffix=_decorator.rb
autocmd User Rails silent! Rnavcommand observer       app/observers             -glob=**/* -suffix=_observer.rb
autocmd User Rails silent! Rnavcommand feature        features                  -glob=**/* -suffix=.feature
autocmd User Rails silent! Rnavcommand job            app/jobs                  -glob=**/* -suffix=_job.rb
autocmd User Rails silent! Rnavcommand mediator       app/mediators             -glob=**/* -suffix=_mediator.rb
autocmd User Rails silent! Rnavcommand stepdefinition features/step_definitions -glob=**/* -suffix=_steps.rb
autocmd VimResized * :wincmd =

" ==========================================================
" TMUX Cursor Fix
" ==========================================================
if exists('$TMUX')
  let &t_SI = "\<Esc>Ptmux;\<Esc>\<Esc>]50;CursorShape=1\x7\<Esc>\\"
  let &t_EI = "\<Esc>Ptmux;\<Esc>\<Esc>]50;CursorShape=0\x7\<Esc>\\"
else
  let &t_SI = "\<Esc>]50;CursorShape=1\x7"
  let &t_EI = "\<Esc>]50;CursorShape=0\x7"
endif

" ==========================================================
" Source More RC Files
" ==========================================================
if filereadable(expand("~/.vimrc.local"))
  source ~/.vimrc.local
endif
