# SOURCED FILES
# ==========================================================

for file in ${HOME}/\.{'path','aliases','prompt.sh','jump.sh'}; do
    [ -r "${file}" ] && [ -f "${file}" ] && source "${file}"
done

if [[ "$OSTYPE" =~ "cygwin" ]]; then
    for file in ${HOME}/\.{'.minttyrc','dark_cyg','light_cyg',}; do
        [ -r "${file}" ] && [ -f "${file}" ] && source "${file}"
    done
fi

# ==========================================================
# DIRCOLORS
# ==========================================================
# AUTHOR: Sang Han
# DEPENDS: GNU coreutils
# For Mac OS X coreutils must be installed first either manually
# or with a package manager.
if [[ "$(dircolors --version)" =~ "GNU coreutils" ]] && [[ "$(ls --version)" =~ "GNU coreutils" ]]; then
    alias ls='ls --color=auto'
    function eval_dircolors() {
        # USAGE: By default, this function checks and evaluates .dircolors
        #        in users $HOME directory.
        #        Takes 1 argument which will be expanded to .dircolor_${STYLE}
        #        for evaluating specific dircolor styles
        [[  -n $1 ]] && local STYLE=$1

        if [[ -r $HOME/.dircolors${STYLE/#/_} ]]; then
            eval "$(dircolors $HOME/.dircolors${STYLE/#/_})"
        fi
        }

    eval_dircolors

    [[ "$COLORFGBG" == "11;15" ]] && eval_dircolors light
    [[ "$COLORFGBG" == "12;8" ]] && eval_dircolors dark
fi

# ==========================================================
# ENVAR
# ==========================================================
export GREP_OPTIONS='--color=auto'
export PATH=/usr/local/bin:${HOME}/bin:$PATH
export EDITOR=vim

# ==========================================================
# Functions
# ==========================================================
red() {
    RED=$(tput setaf 1)
    NORMAL=$(tput sgr0)
    echo -e "$RED$*$NORMAL"
}

green() {
    GREEN=$(tput setaf 2)
    NORMAL=$(tput sgr0)
    echo -e "$GREEN$*$NORMAL"
}

yellow() {
    YELLOW=$(tput setaf 3)
    NORMAL=$(tput sgr0)
    echo -e "$YELLOW$*$NORMAL"
}

ds () {
    echo "Disk Space Utilization for $HOSTNAME"
    df -h
}
