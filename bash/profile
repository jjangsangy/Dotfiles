# SOURCED FILES
# ==========================================================
for file in ${HOME}/\.{'path','aliases','bash_completion','secrets'}; do
    [ -r "${file}" ] && [ -f "${file}" ] && source "${file}"
done

# ==========================================================
# ENVAR
# ==========================================================
export EDITOR=vim
export HISTIGNORE="ls:cd:echo:history:clear"
export PROJECT_HOME="${HOME}/Projects"
export PIP_RESPECT_VIRTUALENV=true
export PYTHONDONTWRITEBYTECODE=1
export HISTCONTROL=ignoredups

# ==========================================================
# Powerline Prompt
# ==========================================================
if [ -n "$(which powerline-shell-go)" ]; then
    function powerline_precmd() {
          export PS1="$(powerline-shell-go 2> /dev/null)"
    }
    export PROMPT_COMMAND="powerline_precmd; $PROMPT_COMMAND"
fi

# ==========================================================
# Coreutils Dircolors
# ==========================================================
#
# Caveat:
# =======
# To get OS X dircolors to work in the same manner
# install and link gnucoreutils using homebrew as follows.
#
# brew install coreutils
#
# ln -s "$(brew --prefix)/bin/gls" "$(brew --prefix)/bin/ls"
# ln -s "$(brew --prefix)/bin/gdircolors" "$(brew --prefix)/bin/dircolors"
#
# Display proper directory colors based on bgcolor

function eval_dircolors() {
    [ -n $1 ] && local STYLE=$1

    if [ -r ${HOME}/.dircolors${STYLE/#/_} ]; then
        eval "$(dircolors ${HOME}/.dircolors${STYLE/#/_})"
    fi
}

eval_dircolors

[[ "$COLORFGBG" == "11;15" ]] && eval_dircolors light
[[ "$COLORFGBG" == "12;8" ]] && eval_dircolors dark


# ==========================================================
# Cleanup Functions
# ==========================================================
function clean_pyc() {
    local depth=${1}
    find . -type f -name '*.pyc' -maxdepth ${depth:-1} -exec rm '{}' \;
}

# Clean Pesky .DS.Store files
function clean_ds() {
    local depth=${1}
    find . -type f -name '.DS_Store' -maxdepth ${depth:-1} -exec rm '{}' \;
}


