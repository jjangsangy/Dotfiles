# SOURCED FILES
# ==========================================================

for file in ${HOME}/\.{'path','aliases','prompt.sh','jump.sh'}; do
    [ -r "${file}" ] && [ -f "${file}" ] && source "${file}"
done

if [[ "$OSTYPE" =~ "cygwin" ]]; then
    for file in ${HOME}/\.{'.minttyrc','dark_cyg','light_cyg',}; do
        [ -r "${file}" ] && [ -f "${file}" ] && source "${file}"
    done
fi

# ==========================================================
# DIRCOLORS
# ==========================================================
# AUTHOR: Sang Han
# DEPENDS: GNU coreutils
# For Mac OS X coreutils must be installed first either manually
# or with a package manager.
alias 'ls=ls --color=auto'
eval_dircolors() {
    # USAGE: By default, this function checks and evaluates .dircolors
    #        in users $HOME directory.
    #        Takes 1 argument which will be expanded to .dircolor_${STYLE}
    #        for evaluating specific dircolor styles
    [[  -n $1 ]] && local STYLE=$1

    if [[ -r $HOME/.dircolors${STYLE/#/_} ]]; then
        eval "$(dircolors $HOME/.dircolors${STYLE/#/_})"
    fi
}

eval_dircolors

[[ "$COLORFGBG" == "11;15" ]] && eval_dircolors light
[[ "$COLORFGBG" == "12;8" ]] && eval_dircolors dark

# ==========================================================
# ENVAR
# ==========================================================
export GREP_OPTIONS='--color=auto'
export PATH=/usr/local/bin:${HOME}/bin:$PATH
export EDITOR=vim
export HISTIGNORE="ls:cd:echo:history:clear"
export WORKON_HOME=$HOME/.virtualenvs
export PIP_VIRTUALENV_BASE=$WORKON_HOME
export PROJECT_HOME=$HOME/Projects
export HOMEBREW_EDITOR=vim
export HOMEBREW_VERBOSE=true
export PIP_RESPECT_VIRTUALENV=true

source /usr/local/bin/virtualenvwrapper.sh
source "${HOME}/.virtualenvs/py3k/bin/activate"
# source "${HOME}/.powerline.sh"

if [ -f $(brew --prefix)/etc/bash_completion ]; then
    source $(brew --prefix)/etc/bash_completion
fi

# ==========================================================
# Functions
# ==========================================================

clean_pyc() {
    for file in *; do
        if [[ -f $file ]] && [[ $file =~ pyc$ ]]; then
            rm $file
        fi
    done
}
