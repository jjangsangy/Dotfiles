# ==========================================================
# SOURCED FILES
# ==========================================================
# TODO: Source files with FOR LOOP rather than conditionals

if [[ -r ${HOME}/.path ]]; then
    . ${HOME}/.path
fi

if [[ -r ${HOME}/.aliases ]]; then
    . ${HOME}/.aliases
fi

if [[ -r ${HOME}/.prompt.sh ]]; then
    . ${HOME}/.prompt.sh
fi

if [[ -r ${HOME}/.jump.sh ]]; then
    . ${HOME}/.jump.sh
fi

# ==========================================================
# DIRCOLORS
# ==========================================================
# AUTHOR: Sang Han
# DEPENDS: GNU coreutils
# For Mac OS X coreutils must be installed first either manually
# or with a package manager.
if [[ "$(dircolors --version)" =~ "GNU coreutils" ]] \
    && [[ "$(ls --version)" =~ "GNU coreutils" ]]; then

    eval_dircolors() {
        # USAGE: By default, this function checks and evaluates .dircolors
        #        in users $HOME directory.
        #        Takes 1 argument which will be expanded to .dircolor_${STYLE}
        #        for evaluating specific dircolor styles
        if [[  -n $1 ]]; then
            local STYLE=$1
        fi

        if [[ -r $HOME/.dircolors${STYLE/#/_} ]]; then
            eval "$(dircolors $HOME/.dircolors${STYLE/#/_})"
            export LSCOLORS='--color=auto'
        else
            export CLICOLOR=1; export LSCOLORS=Exfxcxdxbxegedabagacad
        fi
        }

    eval_dircolors

    # Checks for .dircolors_light
    if [[ "$COLORFGBG" == "11;15" ]]; then
        eval_dircolors light
    fi
    # Checks for .dircolors_dark
    if [[ "$COLORFGBG" == "12;8" ]]; then
        eval_dircolors dark
    fi
fi

# ==========================================================
# ENVAR
# ==========================================================
# TODO: Move these exports into correct sourced files
export GREP_OPTIONS='--color=auto'
export PATH=/usr/local/bin:${HOME}/bin:$PATH

# ==========================================================
# Functions
# ==========================================================
red() {
    RED=$(tput setaf 1)
    NORMAL=$(tput sgr0)
    echo -e "$RED$*$NORMAL"
}

green() {
    GREEN=$(tput setaf 2)
    NORMAL=$(tput sgr6)
    echo -e "$GREEN$*$NORMAL"
}

yellow() {
    YELLOW=$(tput setaf 3)
    NORMAL=$(tput sgr0)
    echo -e "$YELLOW$*$NORMAL"
}

ds () {
    echo "Disk Space Utilization for $HOSTNAME"
    df -h
}
