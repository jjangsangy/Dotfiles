# Bash Utility Functions

function gi {
    local ignores=$(printf "%s," "${@}")
    curl -sL "https://www.toptal.com/developers/gitignore/api/${ignores%,}"
}

function cloudwatch {
    local server_loc="${1}"

    ssh -t "${server_loc}" -- tail -f /var/log/cloud-init-output.log
}

# Homebrew Update
function homebrew {
    brew update
    brew upgrade
    brew upgrade --cask
    brew cleanup
}

# Delete Leftover Python Bytecode
function rmpyc {
    find . -type f -name '*.pyc' -maxdepth 3 -delete
}

# Clean Pesky .DS.Store files
function rmds {
    find . -type f -name '.DS_Store' -maxdepth 3 -delete
}

function ff-dl {
    local url="$1"
    local output="${2,,}"
    local output="${output//-/\.}"
    ffmpeg-bar -i "$url" -c copy "${output//\//\.}"
}

# Multipurpose Archive Extractor
function extract {
    # display usage if no parameters given
     if [ -z "$1" ]; then
        echo "Usage: extract <path/file_name>.<zip|rar|bz2|gz|tar|tbz2|tgz|Z|7z|xz|ex|tar.bz2|tar.gz|tar.xz>"
     else
        if [ -f "$1" ] ; then
            # NAME=${1%.*}
            # mkdir $NAME && cd $NAME
            case $1 in
              *.tar.bz2)   tar xvjf "../$1"    ;;
              *.tar.gz)    tar xvzf "../$1"    ;;
              *.tar.xz)    tar xvJf "../$1"    ;;
              *.lzma)      unlzma "../$1"      ;;
              *.bz2)       bunzip2 "../$1"     ;;
              *.rar)       unrar x -ad "../$1" ;;
              *.gz)        gunzip "../$1"      ;;
              *.tar)       tar xvf "../$1"     ;;
              *.tbz2)      tar xvjf "../$1"    ;;
              *.tgz)       tar xvzf "../$1"    ;;
              *.zip)       unzip "../$1"       ;;
              *.Z)         uncompress "../$1"  ;;
              *.7z)        7z x "../$1"        ;;
              *.xz)        unxz "../$1"        ;;
              *.exe)       cabextract "../$1"  ;;
              *)           echo "extract: '$1' - unknown archive method" ;;
            esac
        else
            echo "$1 - file does not exist"
        fi
    fi
}

# Process PS
function p {
    command ps -axr -o "user pid sig %cpu %mem addr comm" 2>/dev/null
}

# vi: ft=sh
