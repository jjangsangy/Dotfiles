#!/usr/bin/env bash
# ==============================================================================
  readonly VERSION=0.1 BUILD="test"
# ==============================================================================
usage() {
    local progname="${argv[0]}"

    cat <<- DOCUMENT

    ${f[u]}AUTHOR:${f[_]}      Sang Han
    ${f[u]}CREATED:${f[_]}     06/29/2014
    ${f[u]}REVISION:${f[_]}    $VERSION-$BUILD

    ${f[u]}USAGE:${f[_]}
	    ${f[lightfg]}${f[progname]}${f[_]} ${f[blue]}[-h|--help]${f[_]} ${f[green]}[${f[_]}${f[blue]}[-p|--prefix]${f[_]} ${f[green]}package_base]${f[_]} ${f[red]}env${f[_]}

    ${f[u]}DESCRIPTION:${f[_]}
	    ${f[cyan]}Convenience wrapper for detecting and sourcing conda enviornments${f[_]}

    ${f[u]}OPTIONS:${f[_]} \
	${f[cyan]}
        -h --help:
            Outputs usage.
        -p --prefix:
            Specify custom prefix directory
	${f[_]}
	${f[red]}
        Prefix Default: \$HOME/anaconda/envs
	${f[_]} \

	DOCUMENT
}
# ==============================================================================
# Global Variables
# ==============================================================================
declare -r argv=("$(basename "${BASH_SOURCE}")" "$@")
declare -i argc="($#) + 1"

# Text Format Bindings
# ==============================================================================
# Note: This feature only works on BASH 4+.
#       Machines running earlier versions of the shell will output
declare -A f=(
       [u]=$(tput smul)
     [red]=$(tput setaf 1)
   [green]=$(tput setaf 2)
    [blue]=$(tput setaf 4)
    [cyan]=$(tput setaf 6)
 [lightfg]=$(tput setab 7)
       [_]=$(tput sgr0)
)

# ==============================================================================
# Functions
# ==============================================================================
function activate() {
    local activation="${envdir}/${venv}/bin/activate"
    if [ -f "${activation}" ]; then
        source "$activation" "$venv"
    fi
}

function find_envs() {
    return
}

function check_input() {
    # TODO: Grab avaiable enviornments and check against them
    if ((argc-1 == 1)); then
        local venv="${argv[1]}"
    else
        printf "\n${u}%s${_u_}\n" \
            "Please select an enviornment" >&2
        printf "${u}PREFIX:${_u_}\n%s \n\n" \
            "${cyan}${envdir}${_cyan_}" >&2
        # Replace with Indexed Array
        for envs in "${envdir}/"*; do
            if [ -r "${envs}/bin/activate" ]; then
                printf "${blue}%s${_blue_}: " \
                    "${envs##*/}" >&2
                printf "%s" "$(${envs}/bin/python --version)"

            fi
        done
        return 1
    fi
}

# ===============================================================================
# Parameters
# ===============================================================================
# Long Arguments
for arg; do
    declare delim=""
    case "$arg" in
        --help)     args="${args}-h ";;
        --prefix)   args="${args}-p ";;

         *) [ "${argv[i]:0:1}" = "-" ] || delim="\""
             args="${args}${delim}${arg}${delim} ";;
    esac
done; eval set -- $args

# Short Arguments
while getopts "p:h" OPTION; do
    case ${OPTION} in
        h) usage
           exit 0
            ;;
        p) readonly PREFIX="${OPTARG}"
            ;;
       \?) echo "Invalid option: -${OPTARG}" >&2
           exit 1
            ;;
    esac
done
    shift $(($OPTIND-1))

# ===============================================================================
# Main Function
# ===============================================================================
main() {
    # Check for Anaconda Directory
    local envdir=${PREFIX:="$HOME/anaconda/envs"}
    if ! [ -d "$envdir" ]; then
        printf "No directory at %s\n" \
            "${red}${envdir}${_red_}" >&2
        return 1
    fi
    check_input
    activate
}

# ===============================================================================
# Program Entry Point
# ===============================================================================
if [ "$0" = "${BASH_SOURCE}" ]; then
    main
fi
