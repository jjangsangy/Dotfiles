#!/usr/bin/env bash

# Assumes Python 2 unless specified
if [ "$1" = 3 ]; then
    V=3
else
    V=2
fi

function outdated() {
    # List out outdated python packages delimited by newline
    pip${V} list --outdated \
        | sed \
            -e 's/(.*//g' \
            -e '/^Could/ d' \
            -e '/^Some/ d'
}

main() {
    echo "Unpacking outdated packages for Python ${V}"
    declare -a list=( $(outdated) )

    # Loop through each package and install upgrade
    for ((i=0; i<${#list[@]}; i++)); do
        printf "Package: %-20s $(tput setaf 6)Installing$(tput sgr0)" "${list[i]}"

        # Checks for successful installation
        pip${V} install -U "${list[i]}" &>/dev/null \
            && printf "\b\b\b\b\b\b\b\b\b\b$(tput setaf 2)%-11s$(tput sgr0)\n" "Success" \
            || printf "\b\b\b\b\b\b\b\b\b\b$(tput setaf 1)%-11s$(tput sgr0)\n" "Fail"
    done
}

if [ "$0" = "${BASH_SOURCE}" ]; then
    main
fi
