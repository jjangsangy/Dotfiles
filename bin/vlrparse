#!/usr/bin/env python
from __future__ import print_function, unicode_literals

import os
import sys
import numpy as np
import pandas as pd

from argparse import ArgumentParser


def logparse(fields):
    """
    Takes in a list of field strings and returns a dictionary of items that can
    be referenced by key, value pair.
    """
    filemap = dict()
    for field in fields:
        key, value = field.split(': ')
        filemap[key.strip()] = value.strip()
    return logmap

def match_field(logfile):
    """
    Implement queue and return a nestest set of list items corresponding each item in the list of queries.
    TODO: This method is currently not safe to run unless the exact order in which the
          matches will occur.
    """
    queries, matches = ['AMN1LoadSensor', 'Start:', 'machineID:', 'msec'], list()
    with open(logfile, 'rt') as log:
        for line in log:
            if any([line.startswith(query) for query in queries]):
                matches.append(line)
        return matches


def main():
    parser = ArgumentParser()
    parser.add_argument('logpath',
            help="Path to vlr log file",
            type=str,
            )
    parser.add_argument('plots',
            help="A list of fields to output plots",
            type=str,
            nargs='?',
            default=None,
            )
    args = parser.parse_args()
    print(args.logpath, args.plots)

if __name__ == '__main__':
    sys.exit(main())
